services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - ./volumes/cache:/data

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5430:5432'
    volumes:
      - ./volumes/data:/data/db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
  api-service:
    container_name: api-service
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PORT=3000
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=redis
      - REDIS_CACHE_TTL=${REDIS_CACHE_TTL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
    ports:
      - '3001:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
